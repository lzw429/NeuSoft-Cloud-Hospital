<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.medical.dao.ChargeEntryMapper">
  <resultMap id="BaseResultMap" type="com.neusoft.medical.bean.ChargeEntry">
    <constructor>
      <idArg column="charge_entry_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="registration_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="charge_form_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="charge_item_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="examination_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="unit_price" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="total_price" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="nums" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="uncharged_nums" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="not_given_nums" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pay_state" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="made_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="department_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="doctor_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="collector_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="valid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="doctor_advice" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reserve1" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reserve2" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reserve3" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    charge_entry_id, registration_id, charge_form_id, charge_item_id, examination_id, 
    unit_price, total_price, nums, uncharged_nums, not_given_nums, pay_state, made_time, 
    department_id, doctor_id, collector_id, valid, doctor_advice, reserve1, reserve2, 
    reserve3
  </sql>
  <select id="selectByExample" parameterType="com.neusoft.medical.bean.ChargeEntryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hospital..charge_entry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.neusoft.medical.bean.ChargeEntryExample">
    delete from hospital..charge_entry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.neusoft.medical.bean.ChargeEntry">
    <selectKey keyProperty="chargeEntryId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hospital..charge_entry
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="registrationId != null">
        registration_id,
      </if>
      <if test="chargeFormId != null">
        charge_form_id,
      </if>
      <if test="chargeItemId != null">
        charge_item_id,
      </if>
      <if test="examinationId != null">
        examination_id,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="nums != null">
        nums,
      </if>
      <if test="unchargedNums != null">
        uncharged_nums,
      </if>
      <if test="notGivenNums != null">
        not_given_nums,
      </if>
      <if test="payState != null">
        pay_state,
      </if>
      <if test="madeTime != null">
        made_time,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="collectorId != null">
        collector_id,
      </if>
      <if test="valid != null">
        valid,
      </if>
      <if test="doctorAdvice != null">
        doctor_advice,
      </if>
      <if test="reserve1 != null">
        reserve1,
      </if>
      <if test="reserve2 != null">
        reserve2,
      </if>
      <if test="reserve3 != null">
        reserve3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="registrationId != null">
        #{registrationId,jdbcType=INTEGER},
      </if>
      <if test="chargeFormId != null">
        #{chargeFormId,jdbcType=INTEGER},
      </if>
      <if test="chargeItemId != null">
        #{chargeItemId,jdbcType=INTEGER},
      </if>
      <if test="examinationId != null">
        #{examinationId,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="nums != null">
        #{nums,jdbcType=INTEGER},
      </if>
      <if test="unchargedNums != null">
        #{unchargedNums,jdbcType=INTEGER},
      </if>
      <if test="notGivenNums != null">
        #{notGivenNums,jdbcType=INTEGER},
      </if>
      <if test="payState != null">
        #{payState,jdbcType=INTEGER},
      </if>
      <if test="madeTime != null">
        #{madeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="collectorId != null">
        #{collectorId,jdbcType=INTEGER},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=INTEGER},
      </if>
      <if test="doctorAdvice != null">
        #{doctorAdvice,jdbcType=VARCHAR},
      </if>
      <if test="reserve1 != null">
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null">
        #{reserve3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neusoft.medical.bean.ChargeEntryExample" resultType="java.lang.Long">
    select count(*) from hospital..charge_entry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hospital..charge_entry
    <set>
      <if test="record.chargeEntryId != null">
        charge_entry_id = #{record.chargeEntryId,jdbcType=INTEGER},
      </if>
      <if test="record.registrationId != null">
        registration_id = #{record.registrationId,jdbcType=INTEGER},
      </if>
      <if test="record.chargeFormId != null">
        charge_form_id = #{record.chargeFormId,jdbcType=INTEGER},
      </if>
      <if test="record.chargeItemId != null">
        charge_item_id = #{record.chargeItemId,jdbcType=INTEGER},
      </if>
      <if test="record.examinationId != null">
        examination_id = #{record.examinationId,jdbcType=INTEGER},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.nums != null">
        nums = #{record.nums,jdbcType=INTEGER},
      </if>
      <if test="record.unchargedNums != null">
        uncharged_nums = #{record.unchargedNums,jdbcType=INTEGER},
      </if>
      <if test="record.notGivenNums != null">
        not_given_nums = #{record.notGivenNums,jdbcType=INTEGER},
      </if>
      <if test="record.payState != null">
        pay_state = #{record.payState,jdbcType=INTEGER},
      </if>
      <if test="record.madeTime != null">
        made_time = #{record.madeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.doctorId != null">
        doctor_id = #{record.doctorId,jdbcType=INTEGER},
      </if>
      <if test="record.collectorId != null">
        collector_id = #{record.collectorId,jdbcType=INTEGER},
      </if>
      <if test="record.valid != null">
        valid = #{record.valid,jdbcType=INTEGER},
      </if>
      <if test="record.doctorAdvice != null">
        doctor_advice = #{record.doctorAdvice,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve1 != null">
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve2 != null">
        reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve3 != null">
        reserve3 = #{record.reserve3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hospital..charge_entry
    set charge_entry_id = #{record.chargeEntryId,jdbcType=INTEGER},
      registration_id = #{record.registrationId,jdbcType=INTEGER},
      charge_form_id = #{record.chargeFormId,jdbcType=INTEGER},
      charge_item_id = #{record.chargeItemId,jdbcType=INTEGER},
      examination_id = #{record.examinationId,jdbcType=INTEGER},
      unit_price = #{record.unitPrice,jdbcType=DOUBLE},
      total_price = #{record.totalPrice,jdbcType=DOUBLE},
      nums = #{record.nums,jdbcType=INTEGER},
      uncharged_nums = #{record.unchargedNums,jdbcType=INTEGER},
      not_given_nums = #{record.notGivenNums,jdbcType=INTEGER},
      pay_state = #{record.payState,jdbcType=INTEGER},
      made_time = #{record.madeTime,jdbcType=TIMESTAMP},
      department_id = #{record.departmentId,jdbcType=INTEGER},
      doctor_id = #{record.doctorId,jdbcType=INTEGER},
      collector_id = #{record.collectorId,jdbcType=INTEGER},
      valid = #{record.valid,jdbcType=INTEGER},
      doctor_advice = #{record.doctorAdvice,jdbcType=VARCHAR},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      reserve3 = #{record.reserve3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neusoft.medical.bean.ChargeEntry">
    update hospital..charge_entry
    <set>
      <if test="registrationId != null">
        registration_id = #{registrationId,jdbcType=INTEGER},
      </if>
      <if test="chargeFormId != null">
        charge_form_id = #{chargeFormId,jdbcType=INTEGER},
      </if>
      <if test="chargeItemId != null">
        charge_item_id = #{chargeItemId,jdbcType=INTEGER},
      </if>
      <if test="examinationId != null">
        examination_id = #{examinationId,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="nums != null">
        nums = #{nums,jdbcType=INTEGER},
      </if>
      <if test="unchargedNums != null">
        uncharged_nums = #{unchargedNums,jdbcType=INTEGER},
      </if>
      <if test="notGivenNums != null">
        not_given_nums = #{notGivenNums,jdbcType=INTEGER},
      </if>
      <if test="payState != null">
        pay_state = #{payState,jdbcType=INTEGER},
      </if>
      <if test="madeTime != null">
        made_time = #{madeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="collectorId != null">
        collector_id = #{collectorId,jdbcType=INTEGER},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=INTEGER},
      </if>
      <if test="doctorAdvice != null">
        doctor_advice = #{doctorAdvice,jdbcType=VARCHAR},
      </if>
      <if test="reserve1 != null">
        reserve1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        reserve2 = #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null">
        reserve3 = #{reserve3,jdbcType=VARCHAR},
      </if>
    </set>
    where charge_entry_id = #{chargeEntryId,jdbcType=INTEGER}
  </update>
</mapper>