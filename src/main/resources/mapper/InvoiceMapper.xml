<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.medical.dao.InvoiceMapper">
  <resultMap id="BaseResultMap" type="com.neusoft.medical.bean.Invoice">
    <constructor>
      <idArg column="invoice_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="expense_category_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="registration_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="collector_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pay_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="pay_amount" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="valid" javaType="java.lang.Boolean" jdbcType="BIT" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    invoice_id, expense_category_id, registration_id, collector_id, pay_time, pay_amount, 
    valid
  </sql>
  <select id="selectByExample" parameterType="com.neusoft.medical.bean.InvoiceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hospital.invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.neusoft.medical.bean.InvoiceExample">
    delete from hospital.invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.neusoft.medical.bean.Invoice">
    <selectKey keyProperty="invoiceId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hospital.invoice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="expenseCategoryId != null">
        expense_category_id,
      </if>
      <if test="registrationId != null">
        registration_id,
      </if>
      <if test="collectorId != null">
        collector_id,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="valid != null">
        valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="expenseCategoryId != null">
        #{expenseCategoryId,jdbcType=INTEGER},
      </if>
      <if test="registrationId != null">
        #{registrationId,jdbcType=INTEGER},
      </if>
      <if test="collectorId != null">
        #{collectorId,jdbcType=INTEGER},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=DOUBLE},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neusoft.medical.bean.InvoiceExample" resultType="java.lang.Long">
    select count(*) from hospital.invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hospital.invoice
    <set>
      <if test="record.invoiceId != null">
        invoice_id = #{record.invoiceId,jdbcType=INTEGER},
      </if>
      <if test="record.expenseCategoryId != null">
        expense_category_id = #{record.expenseCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.registrationId != null">
        registration_id = #{record.registrationId,jdbcType=INTEGER},
      </if>
      <if test="record.collectorId != null">
        collector_id = #{record.collectorId,jdbcType=INTEGER},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payAmount != null">
        pay_amount = #{record.payAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.valid != null">
        valid = #{record.valid,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hospital.invoice
    set invoice_id = #{record.invoiceId,jdbcType=INTEGER},
      expense_category_id = #{record.expenseCategoryId,jdbcType=INTEGER},
      registration_id = #{record.registrationId,jdbcType=INTEGER},
      collector_id = #{record.collectorId,jdbcType=INTEGER},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      pay_amount = #{record.payAmount,jdbcType=DOUBLE},
      valid = #{record.valid,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neusoft.medical.bean.Invoice">
    update hospital.invoice
    <set>
      <if test="expenseCategoryId != null">
        expense_category_id = #{expenseCategoryId,jdbcType=INTEGER},
      </if>
      <if test="registrationId != null">
        registration_id = #{registrationId,jdbcType=INTEGER},
      </if>
      <if test="collectorId != null">
        collector_id = #{collectorId,jdbcType=INTEGER},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=DOUBLE},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=BIT},
      </if>
    </set>
    where invoice_id = #{invoiceId,jdbcType=INTEGER}
  </update>
</mapper>