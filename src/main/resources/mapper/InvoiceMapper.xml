<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.medical.dao.InvoiceMapper">
  <resultMap id="BaseResultMap" type="com.neusoft.medical.bean.Invoice">
    <constructor>
      <idArg column="invoice_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="invoice_title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="invoice_nums" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="collector_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="registration_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pay_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="invoice_amount" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="self_pay" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="account_pay" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="reimbursement_pay" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="discounted" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="invoice_state" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="prescription_fee" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="examination_fee" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="disposal_fee" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="registration_fee" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="valid" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    invoice_id, invoice_title, invoice_nums, collector_id, registration_id, pay_time, 
    invoice_amount, self_pay, account_pay, reimbursement_pay, discounted, invoice_state, 
    prescription_fee, examination_fee, disposal_fee, registration_fee, valid
  </sql>
  <select id="selectByExample" parameterType="com.neusoft.medical.bean.InvoiceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hospital.invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.neusoft.medical.bean.InvoiceExample">
    delete from hospital.invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.neusoft.medical.bean.Invoice">
    <selectKey keyProperty="invoiceId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hospital.invoice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="invoiceTitle != null">
        invoice_title,
      </if>
      <if test="invoiceNums != null">
        invoice_nums,
      </if>
      <if test="collectorId != null">
        collector_id,
      </if>
      <if test="registrationId != null">
        registration_id,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="invoiceAmount != null">
        invoice_amount,
      </if>
      <if test="selfPay != null">
        self_pay,
      </if>
      <if test="accountPay != null">
        account_pay,
      </if>
      <if test="reimbursementPay != null">
        reimbursement_pay,
      </if>
      <if test="discounted != null">
        discounted,
      </if>
      <if test="invoiceState != null">
        invoice_state,
      </if>
      <if test="prescriptionFee != null">
        prescription_fee,
      </if>
      <if test="examinationFee != null">
        examination_fee,
      </if>
      <if test="disposalFee != null">
        disposal_fee,
      </if>
      <if test="registrationFee != null">
        registration_fee,
      </if>
      <if test="valid != null">
        valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="invoiceTitle != null">
        #{invoiceTitle,jdbcType=VARCHAR},
      </if>
      <if test="invoiceNums != null">
        #{invoiceNums,jdbcType=INTEGER},
      </if>
      <if test="collectorId != null">
        #{collectorId,jdbcType=INTEGER},
      </if>
      <if test="registrationId != null">
        #{registrationId,jdbcType=INTEGER},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="invoiceAmount != null">
        #{invoiceAmount,jdbcType=DOUBLE},
      </if>
      <if test="selfPay != null">
        #{selfPay,jdbcType=DOUBLE},
      </if>
      <if test="accountPay != null">
        #{accountPay,jdbcType=DOUBLE},
      </if>
      <if test="reimbursementPay != null">
        #{reimbursementPay,jdbcType=DOUBLE},
      </if>
      <if test="discounted != null">
        #{discounted,jdbcType=DOUBLE},
      </if>
      <if test="invoiceState != null">
        #{invoiceState,jdbcType=INTEGER},
      </if>
      <if test="prescriptionFee != null">
        #{prescriptionFee,jdbcType=DOUBLE},
      </if>
      <if test="examinationFee != null">
        #{examinationFee,jdbcType=DOUBLE},
      </if>
      <if test="disposalFee != null">
        #{disposalFee,jdbcType=DOUBLE},
      </if>
      <if test="registrationFee != null">
        #{registrationFee,jdbcType=DOUBLE},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neusoft.medical.bean.InvoiceExample" resultType="java.lang.Long">
    select count(*) from hospital.invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hospital.invoice
    <set>
      <if test="record.invoiceId != null">
        invoice_id = #{record.invoiceId,jdbcType=INTEGER},
      </if>
      <if test="record.invoiceTitle != null">
        invoice_title = #{record.invoiceTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceNums != null">
        invoice_nums = #{record.invoiceNums,jdbcType=INTEGER},
      </if>
      <if test="record.collectorId != null">
        collector_id = #{record.collectorId,jdbcType=INTEGER},
      </if>
      <if test="record.registrationId != null">
        registration_id = #{record.registrationId,jdbcType=INTEGER},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.invoiceAmount != null">
        invoice_amount = #{record.invoiceAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.selfPay != null">
        self_pay = #{record.selfPay,jdbcType=DOUBLE},
      </if>
      <if test="record.accountPay != null">
        account_pay = #{record.accountPay,jdbcType=DOUBLE},
      </if>
      <if test="record.reimbursementPay != null">
        reimbursement_pay = #{record.reimbursementPay,jdbcType=DOUBLE},
      </if>
      <if test="record.discounted != null">
        discounted = #{record.discounted,jdbcType=DOUBLE},
      </if>
      <if test="record.invoiceState != null">
        invoice_state = #{record.invoiceState,jdbcType=INTEGER},
      </if>
      <if test="record.prescriptionFee != null">
        prescription_fee = #{record.prescriptionFee,jdbcType=DOUBLE},
      </if>
      <if test="record.examinationFee != null">
        examination_fee = #{record.examinationFee,jdbcType=DOUBLE},
      </if>
      <if test="record.disposalFee != null">
        disposal_fee = #{record.disposalFee,jdbcType=DOUBLE},
      </if>
      <if test="record.registrationFee != null">
        registration_fee = #{record.registrationFee,jdbcType=DOUBLE},
      </if>
      <if test="record.valid != null">
        valid = #{record.valid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hospital.invoice
    set invoice_id = #{record.invoiceId,jdbcType=INTEGER},
      invoice_title = #{record.invoiceTitle,jdbcType=VARCHAR},
      invoice_nums = #{record.invoiceNums,jdbcType=INTEGER},
      collector_id = #{record.collectorId,jdbcType=INTEGER},
      registration_id = #{record.registrationId,jdbcType=INTEGER},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      invoice_amount = #{record.invoiceAmount,jdbcType=DOUBLE},
      self_pay = #{record.selfPay,jdbcType=DOUBLE},
      account_pay = #{record.accountPay,jdbcType=DOUBLE},
      reimbursement_pay = #{record.reimbursementPay,jdbcType=DOUBLE},
      discounted = #{record.discounted,jdbcType=DOUBLE},
      invoice_state = #{record.invoiceState,jdbcType=INTEGER},
      prescription_fee = #{record.prescriptionFee,jdbcType=DOUBLE},
      examination_fee = #{record.examinationFee,jdbcType=DOUBLE},
      disposal_fee = #{record.disposalFee,jdbcType=DOUBLE},
      registration_fee = #{record.registrationFee,jdbcType=DOUBLE},
      valid = #{record.valid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neusoft.medical.bean.Invoice">
    update hospital.invoice
    <set>
      <if test="invoiceTitle != null">
        invoice_title = #{invoiceTitle,jdbcType=VARCHAR},
      </if>
      <if test="invoiceNums != null">
        invoice_nums = #{invoiceNums,jdbcType=INTEGER},
      </if>
      <if test="collectorId != null">
        collector_id = #{collectorId,jdbcType=INTEGER},
      </if>
      <if test="registrationId != null">
        registration_id = #{registrationId,jdbcType=INTEGER},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="invoiceAmount != null">
        invoice_amount = #{invoiceAmount,jdbcType=DOUBLE},
      </if>
      <if test="selfPay != null">
        self_pay = #{selfPay,jdbcType=DOUBLE},
      </if>
      <if test="accountPay != null">
        account_pay = #{accountPay,jdbcType=DOUBLE},
      </if>
      <if test="reimbursementPay != null">
        reimbursement_pay = #{reimbursementPay,jdbcType=DOUBLE},
      </if>
      <if test="discounted != null">
        discounted = #{discounted,jdbcType=DOUBLE},
      </if>
      <if test="invoiceState != null">
        invoice_state = #{invoiceState,jdbcType=INTEGER},
      </if>
      <if test="prescriptionFee != null">
        prescription_fee = #{prescriptionFee,jdbcType=DOUBLE},
      </if>
      <if test="examinationFee != null">
        examination_fee = #{examinationFee,jdbcType=DOUBLE},
      </if>
      <if test="disposalFee != null">
        disposal_fee = #{disposalFee,jdbcType=DOUBLE},
      </if>
      <if test="registrationFee != null">
        registration_fee = #{registrationFee,jdbcType=DOUBLE},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=INTEGER},
      </if>
    </set>
    where invoice_id = #{invoiceId,jdbcType=INTEGER}
  </update>
</mapper>