# 数据源配置
spring.datasource.url=jdbc:mysql://cdb-7fud9x6s.bj.tencentcdb.com:10111?serverTimezone=GMT%2b8
spring.datasource.username=root
spring.datasource.password=xshsmile520
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.tomcat.initial-size=5
#spring.datasource.tomcat.max-active=20
#spring.datasource.tomcat.min-idle=1
#spring.datasource.tomcat.max-idle=20
#spring.datasource.tomcat.max-wait=60000
#spring.datasource.tomcat.time-between-eviction-runs-millis=3600000
#spring.datasource.tomcat.validation-query=SELECT 1
#spring.datasource.tomcat.test-while-idle=true
# Mybatis 配置
mybatis.type-aliases-package=com.neusoft.medical.dao
mybatis.mapper-locations=classpath:mapper/*.xml
# PageHelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
# 服务器配置
server.port=8081
server.servlet.context-path=/cloud-hospital
# Redis 配置
# redis 数据库索引，默认为0
spring.redis.database=0
# redis 服务器地址
spring.redis.host=152.136.111.79
# Redis 服务器端连接端口
spring.redis.port=6379
# redis 服务器连接密码
spring.redis.password=xshsmile520
# 连接池最大连接数
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=2
# 连接超时时间（毫秒）
spring.redis.timeout=5000
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 关闭空闲连接的间隔，单位毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 连接在连接池中的最小生存时间，单位毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true